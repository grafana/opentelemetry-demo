# extra settings to be merged into OpenTelemetry Collector configuration
# do not delete this file
receivers:
  fluentforward:
    endpoint: otelcol:24224

exporters:
  logging:
    verbosity: detailed
  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true
  # TODO spanmetrics does not work correctly with prometheus exporter, until it is fixed we will
  # use prometheusremotewrite instead
  prometheusremotewrite:
    endpoint: http://prometheus:9090/api/v1/write
    target_info:
      enabled: true
  loki:
    endpoint: http://loki:3100/loki/api/v1/push

processors:
  attributes:
    actions:
      - action: insert
        key: service_name
        from_attribute: container_name
      - action: insert
        key: loki.attribute.labels
        value: service_name

  transform/grafanacloudapm:
    trace_statements:
      - context: span
        statements:
          - replace_match(attributes["http.target"], "/api/products/*", "/api/products/{productId}")
          - set(name, Concat([attributes["http.method"], attributes["http.target"]], " ")) where name == "HTTP GET" and attributes["http.target"] != nil
          - set(name, Concat([attributes["http.method"], attributes["http.target"]], " ")) where name == "HTTP POST" and attributes["http.target"] != nil
  transform/fluentd:
    log_statements:
      - context: log
        statements:
          - replace_pattern(attributes["container_name"], "^/", "")
          - replace_pattern(attributes["container_name"], "\\-", "")
  batch:
  filter:
    error_mode: ignore
    traces:
      span:
        # filter out internal spans
        - 'kind == 1'
  # TODO remove once Tempo span to metrics generator is aligned with OTel spanmetrics,
  # see https://docs.google.com/document/d/1iSvlc0Sg0HY86kf_0ApTTQmVze8PHnRSMYadSmU5qpQ/edit#
  metricstransform:
    transforms:
      - include: traces.spanmetrics.duration
        action: update
        new_name: traces.spanmetrics.latency
      - include: traces.spanmetrics.calls
        action: update
        new_name: traces.spanmetrics.calls.total

connectors:
  spanmetrics:
    namespace: "traces.spanmetrics"
    histogram:
      unit: "s"
      explicit:
  servicegraph:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [filter, transform/grafanacloudapm, batch]
      exporters: [spanmetrics, servicegraph]
    metrics:
      receivers: [spanmetrics, servicegraph]
      processors: [metricstransform, batch]
      exporters: [prometheusremotewrite]
    traces/tempo:
      receivers: [otlp]
      processors: [transform/grafanacloudapm, batch]
      exporters: [otlp/tempo]
    logs:
      receivers: [otlp, fluentforward]
      processors: [transform/fluentd, attributes]
      exporters: [loki]
